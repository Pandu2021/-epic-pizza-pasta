name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend:
    name: Back-End build & tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Back-End
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: Back-End/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Generate Prisma Client
        run: npm run prisma:generate

      - name: Lint (non-blocking, src only)
        run: npx eslint "src/**/*.{ts,tsx}" --max-warnings=0
        continue-on-error: true

      - name: Build
        run: npm run build

      - name: Test
        run: npm test --if-present -- --run

  frontend:
    name: Front-End build & tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Front-End
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: Front-End/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Typecheck
        run: npm run typecheck --if-present

      - name: Lint (non-blocking)
        run: npm run lint --if-present
        continue-on-error: true

      - name: Build
        run: npm run build

      - name: Test
        run: npm test --if-present -- --run

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Trigger Backend Render Deploy Hook
        env:
          HOOK: ${{ secrets.RENDER_BACKEND_HOOK_URL }}
        run: |
          if [ -n "$HOOK" ]; then
            echo "Triggering Backend Deploy on Render..."
            curl -fsS -X POST "$HOOK"
          else
            echo "RENDER_BACKEND_HOOK_URL not set. Skipping backend deploy."
          fi

      - name: Trigger Frontend Render Deploy Hook
        env:
          HOOK: ${{ secrets.RENDER_FRONTEND_HOOK_URL }}
        run: |
          if [ -n "$HOOK" ]; then
            echo "Triggering Frontend Deploy on Render..."
            curl -fsS -X POST "$HOOK"
          else
            echo "RENDER_FRONTEND_HOOK_URL not set. Skipping frontend deploy."
          fi
