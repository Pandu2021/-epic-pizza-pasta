# Printer configuration (raw 9100)
# Example for HP LaserJet 103/107/108
PRINTER_HOST=192.168.1.100
PRINTER_PORT=9100
PRINTER_TEST_MESSAGE=Test cetak dari Pizza & Pasta
PRINTER_PROTOCOL=raw # or ipp
PRINTER_IPP_PORT=631
PRINTER_IPP_PATH=/ipp/print

# Windows spooler printing (pdf-to-printer)
# Use `npm run print:list` to find available names
WINDOWS_PRINTER_NAME=REPLACE_WITH_WINDOWS_PRINTER_NAME

# Application
NODE_ENV=development
PORT=4000
# Public URL for this API (used when generating links in emails)
API_BASE_URL=http://localhost:4000/api
# CORS allowlist (comma separated)
CORS_ORIGINS=http://localhost:5173
# Helmet CSP (enable in staging/prod after adjusting frontend domains)
HELMET_CSP=false
# Body size limit (e.g., 200kb, 1mb)
BODY_LIMIT=200kb
# Security
JWT_PRIVATE_KEY=-----BEGIN PRIVATE KEY-----\nREPLACE_WITH_YOUR_DEV_RSA_PRIVATE_KEY\n-----END PRIVATE KEY-----
JWT_PUBLIC_KEY=-----BEGIN PUBLIC KEY-----\nREPLACE_WITH_YOUR_DEV_RSA_PUBLIC_KEY\n-----END PUBLIC KEY-----
JWT_ACCESS_TTL=900s
JWT_REFRESH_TTL=7d
COOKIE_SECRET=change_me_cookie_secret
CSRF_SECRET=change_me_csrf_secret
# CAPTCHA (Google reCAPTCHA)
RECAPTCHA_SECRET_KEY=
# Optional dev bypass token (ignored in production)
RECAPTCHA_BYPASS_TOKEN=test-pass
# Enforce OTP verification for guest checkout (set to false to relax)
GUEST_VERIFICATION_REQUIRED=true
# Guest data retention policy (minutes until PII is purged after completion)
GUEST_DATA_RETENTION_MINUTES=240
GUEST_PURGE_SCAN_MINUTES=15
# Database (Prisma/PostgreSQL)
# Used by docker-compose for Postgres container
POSTGRES_USER=pizza
POSTGRES_PASSWORD="PizzaDev#2025!"
POSTGRES_DB=epic_pizza_dev
# Used by Prisma and the application (keep in sync with POSTGRES_* values above)
# IMPORTANT: Ensure your database encoding is UTF8. If you created a UTF8 DB (e.g., epic_pizza_utf8), point to it and include client_encoding=utf8
# Example for UTF8 DB:
# DATABASE_URL=postgresql://pizza:PizzaDev%232025%21@localhost:5432/epic_pizza_dev_utf8?schema=public&client_encoding=utf8
DATABASE_URL=postgresql://pizza:PizzaDev%232025%21@localhost:5432/epic_pizza_dev?schema=public

# Performance / caching
MENU_CACHE_TTL_MS=60000
PREWARM_MENU=true
HTTP_LOG=true
# Redis (optional for cache/queues)
REDIS_URL=redis://localhost:6379
# PromptPay
PROMPTPAY_MERCHANT_ID=1234567890123
PROMPTPAY_ACCOUNT_TYPE=STATIC
PROMPTPAY_WEBHOOK_SECRET=replace_me_webhook_secret
# Google Maps (server side)
GOOGLE_MAPS_API_KEY=replace_me
# Email/SMTP (Gmail example)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your_gmail_account@gmail.com
SMTP_PASS=app_password_without_spaces
SMTP_FROM=Epic Pizza <your_gmail_account@gmail.com>
PASSWORD_RESET_TOKEN_TTL_MS=1800000
PASSWORD_RESET_EMAIL_TIMEOUT_MS=4500
EMAIL_VERIFICATION_TOKEN_TTL_MS=86400000
WEB_APP_BASE_URL=http://localhost:5173
PUBLIC_WEB_URL=http://localhost:5173
OAUTH_STATE_TTL_MS=600000

# Social Login (Google)
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
# Must match the authorized redirect URI in Google console
# e.g., http://localhost:4000/api/auth/google/callback
GOOGLE_OAUTH_CALLBACK_URL=

# Social Login (LINE)
LINE_CHANNEL_ID=
LINE_CHANNEL_SECRET=
# e.g., http://localhost:4000/api/auth/line/callback
LINE_OAUTH_CALLBACK_URL=

# Payments (Omise - optional; enable if using card payments)
# Public key can be exposed to frontend; secret key must remain server-only
OMISE_PUBLIC_KEY=pk_test_replace_me
OMISE_SECRET_KEY=sk_test_replace_me

# Google Sheets (service account)
# Share your target Spreadsheet to the service account email below
GOOGLE_SHEET_ID=replace_me_sheet_id
GOOGLE_SHEET_SERVICE_EMAIL=replace_me_service_account_email@project.iam.gserviceaccount.com
# IMPORTANT: private key must be single-line with \n escapes
# Example:
# GOOGLE_SHEETS_PRIVATE_KEY=-----BEGIN PRIVATE KEY-----\nABC...\n-----END PRIVATE KEY-----\n
GOOGLE_SHEETS_PRIVATE_KEY=

# ETA configuration
# Restaurant location (used for Google Maps travel time). Defaults to Bangkok center if not set.
RESTAURANT_LAT=13.7563
RESTAURANT_LNG=100.5018
# Optional per-category cook times override (JSON array of {category, minutes})
# COOK_TIMES_JSON=[{"category":"pizza","minutes":16},{"category":"pasta","minutes":11}]
# Optional fine-tuning for kitchen heuristic
# COOK_BASE_MIN=5
# COOK_PER_EXTRA_QTY_MIN=2
# COOK_PER_EXTRA_LINE_MIN=1
